apiVersion: xl-release/v1
kind: Templates
spec:
- directory: Delivery Insights
  children:

  - template: Configure Delivery Insigths
    phases:
    - phase: Setup dashboard
      tasks:
      - name: Create phases
        description: |-
          Go to folder dashbords / Package progression
          Add phases to your progression
          provisional message: if add phases button is not available create them in CTM side
        type: xlrelease.Task
      - name: Create ${application} on the board
        description: |-
          Go to folder dashbords / Package progression
          Create the application ${application} and link it with your Github instance and Jira instance.
          Don't forget to copy the url before saving
        type: xlrelease.Task
      - name: Configure WebHook in GitHub
        type: xlrelease.Task
        description: |-
          Go to GitHub and configure a webhook on your project to point to the one on your clipboard

  - template: Track code and promote
    variables:
      - type: xlrelease.StringVariable
        key: revision
        requiresValue: false
        showOnReleaseStart: false
      - type: xlrelease.StringVariable
        key: application
      - type: xlrelease.StringVariable
        key: initialPhase
      - type: xlrelease.StringVariable
        key: nextPhase
        showOnReleaseStart: false
    scriptUsername: admin
    scriptUserPassword: admin
    
    phases:
    - phase: Work and deploy!
      tasks:
      - name: Commit your work
        type: xlrelease.Task
        description: |-
          In the repository where the webhook was created, push some code with your ticket ID in the commit message
    - phase: Do the magic phase
      tasks:
      - name: Track commits
        type: continuum.TrackCode
        continuumServer: Continuum
        package: ${application}
        group: master
        phase: ${initialPhase}
        revision: ${revision}
      - name: Verify work is on ${initialPhase}
        type: xlrelease.Task
        description: |-
          Go to folder dashbords / Package progression
          A card with your commits should be in phase ${initialPhase}
      - name: next phase
        type: xlrelease.UserInputTask
        description: Please enter the name of the next phase to promote your revision
        variables:
        - nextPhase
      - name: Promote to next phase
        type: continuum.PromoteAPackage
        continuumServer: Continuum
        phase_name: ${nextPhase}
        package: ${application}
        revision: ${revision}
      - name: Verify work is on ${nextPhase}
        type: xlrelease.Task
        description: |-
          Go to folder dashbords / Package progression
          A card with your commits should be in phase ${nextPhase}
      - name: Delivery revision
        type: continuum.DeliverRevision
        continuumServer: Continuum
        package: ${application}
        revision: ${revision}
      - name: Verify work is gone
        description: |-
          Go to folder dashbords / Package progression
          The card should not be in board anymore
        type: xlrelease.Task
      color: '#FFAB00'

  - name: Package progression
    type: continuum.PackageProgressionDashboard
    owner: admin
    tiles:
      - name: Package progression
        type: continuum.PackageProgressionTile
        server: Continuum
        row: 0
        col: 0
